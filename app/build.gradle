apply plugin: 'com.android.application'

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion 'Google Inc.:Google APIs:24'
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.looking.classicalparty"
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        jackOptions {
            enabled true
        }
        ndk {
            // 设置支持的 SO 库构架，一般而言，取你所有的库支持的构架的`交集`。
            abiFilters 'armeabi' // 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }
    }
    //应用 Bugtags 插件
    apply plugin: 'com.bugtags.library.plugin'

    bugtags {
        appKey "9beccb4c14e8f6bd2e0b46f61983d8dc" //这里是你的 appKey
        appSecret "d7ef6550ecafbe1a5e943dada811aeb6" //这里是你的 appSecret，管理员在设置页可以查看
        mappingUploadEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        debugConfig {
            keyAlias 'classical'
            keyPassword 'likeclassical' //System.console().readLine(" :input keyPassword : ")
            storeFile file('../classical.jks')
            storePassword 'likeclassical' //System.console().readLine(" :input storePassword : ");
        }

        releaseConfig {
            keyAlias 'classical'
            keyPassword 'likeclassical' //System.console().readLine(" :input keyPassword : ")
            storeFile file('../classical.jks')
            storePassword 'likeclassical' //System.console().readLine(" :input storePassword : ");
        }
    }

    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            if (variant.buildType.name.equals('release')) {
                def releaseApkName = 'classical-v' + defaultConfig.versionName + '-' + productFlavors.name + '.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            } else if (variant.buildType.name.equals('debug')) {
                //                def releaseApkName = getDebugApkName()
                //                output.outputFile = new File(oldFile.parent, releaseApkName)
            }

        }
    }
    buildTypes {
        release {
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "app_name", "classical")
            //            buildConfigField "String", "BASE_URL", "http://www.jingdian.party/api/"

        }

        //修改生成的apk名字
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def oldFile = output.outputFile
                if (variant.buildType.name.equals('release')) {
                    def releaseApkName = 'classical-v' + defaultConfig.versionName + '-' + productFlavors.name + '.apk'
                    output.outputFile = new File(oldFile.parent, releaseApkName)
                } else if (variant.buildType.name.equals('debug')) {
                    def releaseApkName = getDebugApkName()
                    output.outputFile = new File(oldFile.parent, releaseApkName)
                }
            }
        }


        debug {
            minifyEnabled false
            resValue("string", "app_name", "classical")
            //            buildConfigField "String", "BASE_URL", "http://www.jingdian.party/api/"
            signingConfig signingConfigs.debugConfig

        }
    }
}


def releaseTime() {
    new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"));
}

def getDebugApkName() {
    'classicalParty-v' + android.defaultConfig.versionName + '-' + "(" + releaseTime() + ")" + '-' + '01' + '.apk'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile('de.keyboardsurfer.android.widget:crouton:1.8.4@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    //时间选择控件
    //二维码生成
    compile files('libs/zxing.jar')
    //banner依赖库
    compile 'com.squareup.okhttp:okhttp:2.7.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.android.support:design:25.1.0'
    compile 'com.github.flavienlaurent.datetimepicker:library:0.0.2'
    compile 'com.youth.banner:banner:1.4.9'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.tgioihan:imageloader:1.0.3'
    compile 'com.bugtags.library:bugtags-lib:latest.integration'
    compile 'me.wcy:lrcview:1.4.1'
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.github.userswlwork:pull-to-refresh:1.0.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
//配置lambda表达式
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
    }
}
